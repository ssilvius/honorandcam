---
// MDX Layout wrapper that automatically applies typography
import Layout from '../layouts/Layout.astro';

const { frontmatter } = Astro.props;
---

<Layout title={frontmatter.title} description={frontmatter.description}>
  <div class="max-w-4xl py-6 sm:py-8 md:py-12">
    <article class="mdx-content">
      <slot />
    </article>
  </div>
</Layout>

<style>
  .mdx-content :global(h1) {
    @apply text-4xl sm:text-5xl md:text-6xl lg:text-7xl font-bold mb-4 sm:mb-6 font-fraunces from-accent;
  }
  .mdx-content :global(h2) {
    @apply text-2xl sm:text-2xl md:text-3xl font-semibold mb-3 sm:mb-4 md:mb-5 text-accent font-fraunces;
  }
  
  .mdx-content :global(h3) {
    @apply text-xl sm:text-xl md:text-2xl font-semibold mb-3 sm:mb-4 text-accent font-fraunces;
  }
  
  .mdx-content :global(h4) {
    @apply text-lg sm:text-xl font-semibold mb-2 sm:mb-3 text-accent font-fraunces;
  }
  
  .mdx-content :global(h5) {
    @apply text-lg font-semibold mb-3 text-accent font-fraunces;
  }
  
  .mdx-content :global(h6) {
    @apply text-base font-semibold mb-2 text-accent font-fraunces;
  }
  
  .mdx-content :global(p) {
    @apply text-foreground text-lg sm:text-xl leading-relaxed font-questrial mb-4 sm:mb-6;
  }
  
  .mdx-content :global(a) {
    @apply text-primary hover:text-secondary transition-colors underline;
  }

  .mdx-content :global(a.magnetic-btn) {
    @apply no-underline;
  }
  
  .mdx-content :global(ul) {
    @apply list-disc list-inside mb-4 text-foreground space-y-2;
  }
  
  .mdx-content :global(ol) {
    @apply list-decimal list-inside mb-4 text-foreground space-y-2;
  }
  
  .mdx-content :global(li) {
    @apply leading-relaxed;
  }
  
  .mdx-content :global(blockquote) {
    @apply border-l-4 border-primary pl-6 py-4 my-6 bg-primary/10 italic text-foreground;
  }
  
  .mdx-content :global(strong) {
    @apply font-semibold text-accent;
  }
  
  .mdx-content :global(em) {
    @apply italic text-foreground/90;
  }
  
  .mdx-content :global(code) {
    @apply bg-background/50 text-accent px-2 py-1 rounded text-sm font-mono;
  }
  
  .mdx-content :global(pre) {
    @apply bg-background/50 p-4 rounded-lg overflow-x-auto mb-4;
  }
  
  .mdx-content :global(pre code) {
    @apply bg-transparent p-0 text-foreground;
  }
  
  .mdx-content :global(hr) {
    @apply border-primary my-8;
  }
  
  .mdx-content :global(img) {
    @apply rounded-lg shadow-lg max-w-full h-auto my-4 sm:my-6 mx-auto block;
  }


</style>

<script>
  function magneticHover(e, element) {
    const rect = element.getBoundingClientRect();
    const centerX = rect.left + rect.width / 2;
    const centerY = rect.top + rect.height / 2;
    
    const mouseX = e.clientX - centerX;
    const mouseY = e.clientY - centerY;
    
    const distance = Math.sqrt(mouseX * mouseX + mouseY * mouseY);
    const maxDistance = 120;
    
    if (distance < maxDistance) {
      const strength = (maxDistance - distance) / maxDistance;
      const moveX = mouseX * strength * 0.2;
      const moveY = mouseY * strength * 0.2;
      
      element.style.transform = `translate(${moveX}px, ${moveY}px) translateY(-4px) scale(1.05)`;
      
      const hue = Math.atan2(mouseY, mouseX) * (180 / Math.PI) + 180;
      element.style.filter = `hue-rotate(${hue * 0.1}deg) brightness(1.1) saturate(1.2)`;
    }
  }
  
  function magneticReset(element) {
    element.style.transform = '';
    element.style.filter = '';
  }

  // Make functions globally available
  window.magneticHover = magneticHover;
  window.magneticReset = magneticReset;

  // Load GSAP dynamically with error handling
  function loadGSAP() {
    return new Promise((resolve, reject) => {
      if (window.gsap) {
        resolve();
        return;
      }
      
      const script1 = document.createElement('script');
      script1.src = 'https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js';
      script1.onload = () => {
        const script2 = document.createElement('script');
        script2.src = 'https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/ScrollTrigger.min.js';
        script2.onload = () => resolve();
        script2.onerror = () => reject(new Error('Failed to load ScrollTrigger'));
        document.head.appendChild(script2);
      };
      script1.onerror = () => reject(new Error('Failed to load GSAP'));
      document.head.appendChild(script1);
    });
  }

  // GSAP Medieval Manuscript Animations
  document.addEventListener('DOMContentLoaded', async function() {
    try {
      await loadGSAP();
      
      // Register ScrollTrigger plugin
      window.gsap.registerPlugin(window.ScrollTrigger);
    } catch (error) {
      console.warn('GSAP failed to load, animations disabled:', error);
      // Ensure content is visible even without animations
      const elements = document.querySelectorAll('.mdx-content p, .mdx-content h2, .mdx-content img');
      elements.forEach(el => el.style.opacity = '1');
      return;
    }

    // Respect user's motion preferences
    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
    
    if (!prefersReducedMotion) {
      
      const { gsap } = window;
      
      // 1. Breathing effect on main heading - Illuminated manuscript glow
      gsap.to(".mdx-content h1", {
        scale: 1.015,
        duration: 3.5,
        ease: "sine.inOut",
        yoyo: true,
        repeat: -1,
        transformOrigin: "center center"
      });

      // Add subtle glow pulsing to match breathing
      gsap.to(".mdx-content h1", {
        textShadow: "0 0 30px rgba(247, 230, 161, 0.4), 0 0 60px rgba(247, 230, 161, 0.2)",
        duration: 3.5,
        ease: "sine.inOut",
        yoyo: true,
        repeat: -1
      });

      // 2. Text reveal animations - Medieval manuscript style writing
      gsap.fromTo(".mdx-content p", 
        { 
          opacity: 0, 
          y: 25,
          filter: "blur(3px)"
        },
        { 
          opacity: 1, 
          y: 0,
          filter: "blur(0px)",
          duration: 1.4,
          stagger: 0.4,
          ease: "power2.out",
          scrollTrigger: {
            trigger: ".mdx-content",
            start: "top 75%",
            end: "bottom 25%",
            toggleActions: "play none none reverse"
          }
        }
      );

      // 3. H2 headings with elegant fade-in
      gsap.fromTo(".mdx-content h2", 
        { 
          opacity: 0, 
          x: -30,
          filter: "blur(2px)"
        },
        { 
          opacity: 1, 
          x: 0,
          filter: "blur(0px)",
          duration: 1.6,
          stagger: 0.3,
          ease: "power2.out",
          scrollTrigger: {
            trigger: ".mdx-content",
            start: "top 80%",
            toggleActions: "play none none reverse"
          }
        }
      );


      // 5. Photo slideshow container fade-in
      gsap.fromTo(".photo-slideshow-container", 
        { 
          opacity: 0, 
          scale: 0.95,
          filter: "blur(4px)"
        },
        { 
          opacity: 1, 
          scale: 1,
          filter: "blur(0px)",
          duration: 1.8,
          ease: "power2.out",
          scrollTrigger: {
            trigger: ".photo-slideshow-container",
            start: "top 85%",
            toggleActions: "play none none reverse"
          }
        }
      );

      // 6. Roses sidebar subtle fade-in on load
      gsap.fromTo(".roses-sidebar img", 
        { 
          opacity: 0,
          x: -20
        },
        { 
          opacity: 1,
          x: 0,
          duration: 2,
          ease: "power2.out",
          delay: 0.5
        }
      );

    } else {
      // Fallback for reduced motion - still show content but without animations
      window.gsap && window.gsap.set(".mdx-content p, .mdx-content h2, .mdx-content img", { opacity: 1 });
    }
  });
</script>